{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"test-view\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Test View\", -1 /* CACHED */)), _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"This is a test view for demonstration purposes.\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    name: \"testInput\",\n    placeholder: \"Type something here...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, this.name]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = $event => this.get_call())\n  }, \" Click Me\"), _createTextVNode(\" \" + _toDisplayString(this.name), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","name","placeholder","$event","onClick","_cache","get_call","_toDisplayString"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\TestView.vue"],"sourcesContent":["<template>\r\n  <div class=\"test-view\">\r\n    <h1>Test View</h1>\r\n    <p>This is a test view for demonstration purposes.</p>\r\n    <input type=\"text\" name=\"testInput\" placeholder=\"Type something here...\" v-model=\"this.name\" />\r\n    <button type=\"button\" @click=\"this.get_call()\"> Click Me</button>\r\n    {{this.name}}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'TestPage',\r\n  data() {\r\n    return {\r\n      name: ''\r\n    };\r\n  },\r\n  methods: {\r\n    printName() {\r\n      console.log('name var - ', this.name);\r\n    },\r\n    get_call(){\r\n        axios\r\n            .post('http://localhost:5000/',\r\n                {\r\n                    name: this.name,\r\n                },\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            )\r\n            .then(response => {\r\n                console.log('Response from backend:', response.data);\r\n                console.log('Response status', response.status);\r\n                this.name = response.data.message; // Assuming the backend returns a message\r\n                // #console.log('Name updated:', this.name);\r\n\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching data from backend:', error);\r\n            });\r\n    }\r\n },\r\n};\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAMM,OANNC,UAMM,G,0BALJC,mBAAA,CAAkB,YAAd,WAAS,qB,0BACbA,mBAAA,CAAsD,WAAnD,iDAA+C,qB,gBAClDA,mBAAA,CAA+F;IAAxFC,IAAI,EAAC,MAAM;IAACC,IAAI,EAAC,WAAW;IAACC,WAAW,EAAC,wBAAwB;oEAAeD,IAAI,GAAAE,MAAA;sDAAJF,IAAI,E,GAC3FF,mBAAA,CAAiE;IAAzDC,IAAI,EAAC,QAAQ;IAAEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,SAAOG,QAAQ;KAAI,WAAS,G,iBAAS,GACjE,GAAAC,gBAAA,MAAON,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}