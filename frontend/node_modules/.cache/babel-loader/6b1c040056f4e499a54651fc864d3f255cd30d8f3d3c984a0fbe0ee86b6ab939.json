{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group mt-2\"\n};\nconst _hoisted_4 = {\n  class: \"form-group mt-2\"\n};\nconst _hoisted_5 = {\n  class: \"form-group mt-2\"\n};\nconst _hoisted_6 = {\n  class: \"form-group mt-2\"\n};\nconst _hoisted_7 = {\n  class: \"mt-4 text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[33] || (_cache[33] = _createElementVNode(\"h2\", {\n    class: \"text-center mb-3\"\n  }, \"New Parking Lot\", -1 /* CACHED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.addLot && $options.addLot(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Prime Location Name:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.lot.prime_location_name = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.lot.prime_location_name]])]), _cache[13] || (_cache[13] = _createTextVNode()), _cache[14] || (_cache[14] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _cache[15] || (_cache[15] = _createTextVNode()), _cache[16] || (_cache[16] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Address:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.lot.address = $event),\n    class: \"form-control\",\n    rows: \"3\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.lot.address]])]), _cache[17] || (_cache[17] = _createTextVNode()), _cache[18] || (_cache[18] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _cache[19] || (_cache[19] = _createTextVNode()), _cache[20] || (_cache[20] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_4, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"Pin Code:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.lot.pin_code = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.lot.pin_code]])]), _cache[21] || (_cache[21] = _createTextVNode()), _cache[22] || (_cache[22] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _cache[23] || (_cache[23] = _createTextVNode()), _cache[24] || (_cache[24] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"Price (per hour):\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.lot.price = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.lot.price]])]), _cache[25] || (_cache[25] = _createTextVNode()), _cache[26] || (_cache[26] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _cache[27] || (_cache[27] = _createTextVNode()), _cache[28] || (_cache[28] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_6, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"Maximum Spots:\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.lot.number_of_spots = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.lot.number_of_spots]])]), _cache[29] || (_cache[29] = _createTextVNode()), _cache[30] || (_cache[30] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _cache[31] || (_cache[31] = _createTextVNode()), _cache[32] || (_cache[32] = _createElementVNode(\"br\", null, null, -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_7, [_cache[12] || (_cache[12] = _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    type: \"submit\"\n  }, \"Add\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    class: \"btn btn-secondary ms-3\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"Cancel\")])], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","addLot","_hoisted_2","$data","lot","prime_location_name","$event","required","_hoisted_3","address","rows","_hoisted_4","pin_code","_hoisted_5","type","price","_hoisted_6","number_of_spots","_hoisted_7","onClick","goBack"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\AddparkingLot.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h2 class=\"text-center mb-3\">New Parking Lot</h2>\r\n    <form @submit.prevent=\"addLot\">\r\n      <div class=\"form-group\">\r\n        <label>Prime Location Name:</label> \r\n        <input v-model=\"lot.prime_location_name\" class=\"form-control\" required />\r\n      </div> <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Address:</label>\r\n        <textarea v-model=\"lot.address\" class=\"form-control\" rows=\"3\" required></textarea>\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Pin Code:</label>\r\n        <input v-model=\"lot.pin_code\" class=\"form-control\" required />\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Price (per hour):</label>\r\n        <input type=\"number\" v-model=\"lot.price\" class=\"form-control\" required />\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Maximum Spots:</label>\r\n        <input type=\"number\" v-model=\"lot.number_of_spots\" class=\"form-control\" required />\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"mt-4 text-center\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">Add</button>\r\n        <button class=\"btn btn-secondary ms-3\" @click=\"goBack\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      lot: {\r\n        prime_location_name: \"\",\r\n        address: \"\",\r\n        pin_code: \"\",\r\n        price: \"\",\r\n        number_of_spots: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async addLot() {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/parkinglot', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(this.lot)\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert(\"Parking lot added successfully!\");\r\n          this.$router.push(\"/admin-dashboard\");\r\n        } else {\r\n          const err = await response.json();\r\n          alert(\"Error: \" + err.message);\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert(\"Server Error\");\r\n      }\r\n    },\r\n    goBack() {\r\n      this.$router.go(-1);  // or use `this.$router.push('/admin/dashboard')`\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Optional custom styles */\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAGlBA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAiB;;EAKvBA,KAAK,EAAC;AAAkB;;uBA5BjCC,mBAAA,CAiCM,OAjCNC,UAiCM,G,4BAhCJC,mBAAA,CAAiD;IAA7CH,KAAK,EAAC;EAAkB,GAAC,iBAAe,qBAC5CG,mBAAA,CA8BO;IA9BAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;MAC3BJ,mBAAA,CAGM,OAHNO,UAGM,G,0BAFJP,mBAAA,CAAmC,eAA5B,sBAAoB,qB,gBAC3BA,mBAAA,CAAyE;+DAAzDQ,KAAA,CAAAC,GAAG,CAACC,mBAAmB,GAAAC,MAAA;IAAEd,KAAK,EAAC,cAAc;IAACe,QAAQ,EAAR;iDAA9CJ,KAAA,CAAAC,GAAG,CAACC,mBAAmB,E,kFAClCV,mBAAA,CAAI,qC,6EAACA,mBAAA,CAAI,qCAEhBA,mBAAA,CAGM,OAHNa,UAGM,G,0BAFJb,mBAAA,CAAuB,eAAhB,UAAQ,qB,gBACfA,mBAAA,CAAkF;+DAA/DQ,KAAA,CAAAC,GAAG,CAACK,OAAO,GAAAH,MAAA;IAAEd,KAAK,EAAC,cAAc;IAACkB,IAAI,EAAC,GAAG;IAACH,QAAQ,EAAR;iDAA3CJ,KAAA,CAAAC,GAAG,CAACK,OAAO,E,kFACxBd,mBAAA,CAAI,qC,6EAACA,mBAAA,CAAI,qCAEjBA,mBAAA,CAGM,OAHNgB,UAGM,G,0BAFJhB,mBAAA,CAAwB,eAAjB,WAAS,qB,gBAChBA,mBAAA,CAA8D;+DAA9CQ,KAAA,CAAAC,GAAG,CAACQ,QAAQ,GAAAN,MAAA;IAAEd,KAAK,EAAC,cAAc;IAACe,QAAQ,EAAR;iDAAnCJ,KAAA,CAAAC,GAAG,CAACQ,QAAQ,E,kFACtBjB,mBAAA,CAAI,qC,6EAACA,mBAAA,CAAI,qCAEjBA,mBAAA,CAGM,OAHNkB,UAGM,G,4BAFJlB,mBAAA,CAAgC,eAAzB,mBAAiB,qB,gBACxBA,mBAAA,CAAyE;IAAlEmB,IAAI,EAAC,QAAQ;+DAAUX,KAAA,CAAAC,GAAG,CAACW,KAAK,GAAAT,MAAA;IAAEd,KAAK,EAAC,cAAc;IAACe,QAAQ,EAAR;iDAAhCJ,KAAA,CAAAC,GAAG,CAACW,KAAK,E,kFACjCpB,mBAAA,CAAI,qC,6EAACA,mBAAA,CAAI,qCAEjBA,mBAAA,CAGM,OAHNqB,UAGM,G,4BAFJrB,mBAAA,CAA6B,eAAtB,gBAAc,qB,gBACrBA,mBAAA,CAAmF;IAA5EmB,IAAI,EAAC,QAAQ;+DAAUX,KAAA,CAAAC,GAAG,CAACa,eAAe,GAAAX,MAAA;IAAEd,KAAK,EAAC,cAAc;IAACe,QAAQ,EAAR;iDAA1CJ,KAAA,CAAAC,GAAG,CAACa,eAAe,E,kFAC3CtB,mBAAA,CAAI,qC,6EAACA,mBAAA,CAAI,qCAEjBA,mBAAA,CAGM,OAHNuB,UAGM,G,4BAFJvB,mBAAA,CAA0D;IAAlDH,KAAK,EAAC,iBAAiB;IAACsB,IAAI,EAAC;KAAS,KAAG,qBACjDnB,mBAAA,CAAsE;IAA9DH,KAAK,EAAC,wBAAwB;IAAE2B,OAAK,EAAAtB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAoB,MAAA,IAAApB,QAAA,CAAAoB,MAAA,IAAArB,IAAA,CAAM;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}