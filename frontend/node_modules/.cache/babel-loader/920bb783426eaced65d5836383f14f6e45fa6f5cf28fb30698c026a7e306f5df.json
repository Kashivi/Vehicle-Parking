{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nexport default {\n  data() {\n    return {\n      lot: {\n        prime_location_name: '',\n        address: '',\n        price: 0,\n        number_of_spots: 0\n      },\n      form: {\n        price: 0,\n        number_of_spots: 0\n      },\n      lotId: null\n    };\n  },\n  async created() {\n    this.lotId = this.$route.params.id;\n    await this.loadLot();\n  },\n  methods: {\n    async loadLot() {\n      try {\n        const res = await fetch('http://localhost:5000/api/parkinglot');\n        const data = await res.json();\n        const found = Array.isArray(data.lots) ? data.lots.find(item => item.id === +this.lotId) : null;\n        if (!found) throw new Error('Lot not found');\n        this.lot = found;\n        this.form.price = found.price;\n        this.form.number_of_spots = found.number_of_spots;\n      } catch (e) {\n        alert(e.message);\n        this.$router.push('/admin-dashboard');\n      }\n    },\n    async updateLot() {\n      try {\n        const res = await fetch('http://localhost:5000/api/parkinglot', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.lotId,\n            price: this.form.price,\n            number_of_spots: this.form.number_of_spots\n          })\n        });\n        const json = await res.json();\n        if (json.status === 'ok') {\n          alert('Lot updated successfully');\n          this.$router.push('/admin-dashboard');\n        } else {\n          alert(`Update failed: ${json.message}`);\n        }\n      } catch (e) {\n        console.error(e);\n        alert('Network or server error');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","lot","prime_location_name","address","price","number_of_spots","form","lotId","created","$route","params","id","loadLot","methods","res","fetch","json","found","Array","isArray","lots","find","item","Error","e","alert","message","$router","push","updateLot","method","headers","body","JSON","stringify","status","console","error"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\EditparkingLot.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h2>Edit Parking Lot</h2>\r\n\r\n    <form @submit.prevent=\"updateLot\" class=\"mt-4\">\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Location Name : </label>\r\n        <input type=\"text\" class=\"form-control\" :value=\"lot.prime_location_name\" disabled> <br> <br>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\"> Address : </label>\r\n        <textarea class=\"form-control\" rows=\"2\" :value=\"lot.address\" disabled></textarea>  <br> <br>\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Price : </label>   \r\n        <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          v-model.number=\"form.price\"\r\n          required\r\n        >\r\n      </div>  <br> <br>\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Number of Spots : </label>\r\n        <input\r\n          type=\"number\"\r\n          class=\"form-control\"\r\n          v-model.number=\"form.number_of_spots\"\r\n          required\r\n          min=\"1\"\r\n        >\r\n      </div>   <br> <br>\r\n      <button type=\"submit\" class=\"btn btn-success\"> Save Changes </button>  \r\n      <router-link to=\"/admin-dashboard\" class=\"btn btn-secondary ms-2\"> Cancel </router-link>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      lot: {\r\n        prime_location_name: '',\r\n        address: '',\r\n        price: 0,\r\n        number_of_spots: 0\r\n      },\r\n      form: {\r\n        price: 0,\r\n        number_of_spots: 0\r\n      },\r\n      lotId: null\r\n    };\r\n  },\r\n  async created() {\r\n    this.lotId = this.$route.params.id;\r\n    await this.loadLot();\r\n  },\r\n  methods: {\r\n    async loadLot() {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/parkinglot');\r\n        const data = await res.json();\r\n        const found = Array.isArray(data.lots)\r\n          ? data.lots.find(item => item.id === +this.lotId)\r\n          : null;\r\n        if (!found) throw new Error('Lot not found');\r\n        this.lot = found;\r\n        this.form.price = found.price;\r\n        this.form.number_of_spots = found.number_of_spots;\r\n      } catch (e) {\r\n        alert(e.message);\r\n        this.$router.push('/admin-dashboard');\r\n      }\r\n    },\r\n    async updateLot() {\r\n      try {\r\n        const res = await fetch('http://localhost:5000/api/parkinglot', {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            id: this.lotId,\r\n            price: this.form.price,\r\n            number_of_spots: this.form.number_of_spots\r\n          })\r\n        });\r\n        const json = await res.json();\r\n        if (json.status === 'ok') {\r\n          alert('Lot updated successfully');\r\n          this.$router.push('/admin-dashboard');\r\n        } else {\r\n          alert(`Update failed: ${json.message}`);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n        alert('Network or server error');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container { max-width: 600px; }\r\n</style>"],"mappings":";;;AAuCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;QACHC,mBAAmB,EAAE,EAAE;QACvBC,OAAO,EAAE,EAAE;QACXC,KAAK,EAAE,CAAC;QACRC,eAAe,EAAE;MACnB,CAAC;MACDC,IAAI,EAAE;QACJF,KAAK,EAAE,CAAC;QACRC,eAAe,EAAE;MACnB,CAAC;MACDE,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACD,KAAI,GAAI,IAAI,CAACE,MAAM,CAACC,MAAM,CAACC,EAAE;IAClC,MAAM,IAAI,CAACC,OAAO,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI;QACF,MAAME,GAAE,GAAI,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QAC/D,MAAMf,IAAG,GAAI,MAAMc,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,MAAMC,KAAI,GAAIC,KAAK,CAACC,OAAO,CAACnB,IAAI,CAACoB,IAAI,IACjCpB,IAAI,CAACoB,IAAI,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACX,EAAC,KAAM,CAAC,IAAI,CAACJ,KAAK,IAC9C,IAAI;QACR,IAAI,CAACU,KAAK,EAAE,MAAM,IAAIM,KAAK,CAAC,eAAe,CAAC;QAC5C,IAAI,CAACtB,GAAE,GAAIgB,KAAK;QAChB,IAAI,CAACX,IAAI,CAACF,KAAI,GAAIa,KAAK,CAACb,KAAK;QAC7B,IAAI,CAACE,IAAI,CAACD,eAAc,GAAIY,KAAK,CAACZ,eAAe;MACnD,EAAE,OAAOmB,CAAC,EAAE;QACVC,KAAK,CAACD,CAAC,CAACE,OAAO,CAAC;QAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;MACvC;IACF,CAAC;IACD,MAAMC,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMf,GAAE,GAAI,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UAC9De,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBvB,EAAE,EAAE,IAAI,CAACJ,KAAK;YACdH,KAAK,EAAE,IAAI,CAACE,IAAI,CAACF,KAAK;YACtBC,eAAe,EAAE,IAAI,CAACC,IAAI,CAACD;UAC7B,CAAC;QACH,CAAC,CAAC;QACF,MAAMW,IAAG,GAAI,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,IAAIA,IAAI,CAACmB,MAAK,KAAM,IAAI,EAAE;UACxBV,KAAK,CAAC,0BAA0B,CAAC;UACjC,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;QACvC,OAAO;UACLH,KAAK,CAAC,kBAAkBT,IAAI,CAACU,OAAO,EAAE,CAAC;QACzC;MACF,EAAE,OAAOF,CAAC,EAAE;QACVY,OAAO,CAACC,KAAK,CAACb,CAAC,CAAC;QAChBC,KAAK,CAAC,yBAAyB,CAAC;MAClC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}