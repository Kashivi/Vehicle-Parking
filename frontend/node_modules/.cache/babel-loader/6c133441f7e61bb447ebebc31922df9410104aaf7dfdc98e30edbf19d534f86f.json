{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      user: {\n        id: null,\n        username: '',\n        email: '',\n        phone_number: ''\n      },\n      form: {\n        email: '',\n        phone_number: '',\n        password: ''\n      }\n    };\n  },\n  created() {\n    const item = localStorage.getItem('user');\n    if (!item) {\n      alert('No user info found. Please log in again.');\n      return this.$router.push('/login');\n    }\n    const u = JSON.parse(item);\n    this.user = u;\n    this.form.email = u.email;\n    this.form.phone_number = u.phone_number;\n    // leave form.password blank for security\n  },\n  methods: {\n    async updateUser() {\n      try {\n        const payload = {\n          user_id: this.user.user_id,\n          email: this.form.email,\n          phone_number: this.form.phone_number,\n          password: this.form.password\n        };\n        console.log('Sending payload:', payload);\n        const res = await fetch('http://localhost:5000/api/userinfo', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        console.log('HTTP status:', res.status, 'Content-Type header:', res.headers.get('Content-Type'));\n        const json = await res.json();\n        if (res.ok && json.status === 'ok') {\n          alert('User updated successfully');\n          const updated = {\n            ...this.user,\n            ...{\n              email: this.form.email,\n              phone_number: this.form.phone_number\n            }\n          };\n          localStorage.setItem('user', JSON.stringify(updated));\n          this.$router.push('/user-dashboard');\n        } else {\n          alert(`Update failed (${res.status}): ${json.message}`);\n        }\n      } catch (e) {\n        console.error(e);\n        alert('Network or server error');\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","user","id","username","email","phone_number","form","password","created","item","localStorage","getItem","alert","$router","push","u","JSON","parse","methods","updateUser","payload","user_id","console","log","res","fetch","method","headers","body","stringify","status","get","json","ok","updated","setItem","message","e","error"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\EditUser.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h2>Edit User Profile</h2>\r\n    <form @submit.prevent=\"updateUser\" class=\"mt-4\">\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Username :</label>\r\n        <input type=\"text\" class=\"form-control\" :value=\"user.username\" disabled>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <!-- Email -->\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Email :</label>\r\n        <input type=\"email\" class=\"form-control\" v-model=\"form.email\" required>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <!-- Phone -->\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Phone Number :</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"form.phone_number\" required>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <!-- Password -->\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Password :</label>\r\n        <input type=\"password\" class=\"form-control\" v-model=\"form.password\" required>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <button type=\"submit\" class=\"btn btn-success\">Save Changes</button>\r\n      <router-link to=\"/user-dashboard\" class=\"btn btn-secondary ms-2\">Cancel</router-link>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: { id: null, username: '', email: '', phone_number: '' },\r\n      form: { email: '', phone_number: '', password: '' }\r\n    }\r\n  },\r\n  created() {\r\n    const item = localStorage.getItem('user')\r\n    if (!item) {\r\n      alert('No user info found. Please log in again.')\r\n      return this.$router.push('/login')\r\n    }\r\n    const u = JSON.parse(item)\r\n    this.user = u\r\n    this.form.email = u.email\r\n    this.form.phone_number = u.phone_number\r\n    // leave form.password blank for security\r\n  },\r\n  methods: {\r\n    async updateUser() {\r\n      try {\r\n        const payload = {\r\n          user_id: this.user.user_id,\r\n          email: this.form.email,\r\n          phone_number: this.form.phone_number,\r\n          password: this.form.password\r\n        }\r\n\r\n        console.log('Sending payload:', payload)\r\n        const res = await fetch('http://localhost:5000/api/userinfo', {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload)\r\n        })\r\n        console.log('HTTP status:', res.status, 'Content-Type header:', res.headers.get('Content-Type'));\r\n\r\n        const json = await res.json()\r\n        if (res.ok && json.status === 'ok') {\r\n          alert('User updated successfully')\r\n          const updated = { ...this.user, ...{ email: this.form.email, phone_number: this.form.phone_number } }\r\n          localStorage.setItem('user', JSON.stringify(updated))\r\n          this.$router.push('/user-dashboard')\r\n        } else {\r\n          alert(`Update failed (${res.status}): ${json.message}`)\r\n        }\r\n      } catch (e) {\r\n        console.error(e)\r\n        alert('Network or server error')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container { max-width: 600px; }\r\n</style>"],"mappings":";AAsCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QAAEC,EAAE,EAAE,IAAI;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAC;MAC7DC,IAAI,EAAE;QAAEF,KAAK,EAAE,EAAE;QAAEC,YAAY,EAAE,EAAE;QAAEE,QAAQ,EAAE;MAAG;IACpD;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,IAAG,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM;IACxC,IAAI,CAACF,IAAI,EAAE;MACTG,KAAK,CAAC,0CAA0C;MAChD,OAAO,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ;IACnC;IACA,MAAMC,CAAA,GAAIC,IAAI,CAACC,KAAK,CAACR,IAAI;IACzB,IAAI,CAACR,IAAG,GAAIc,CAAA;IACZ,IAAI,CAACT,IAAI,CAACF,KAAI,GAAIW,CAAC,CAACX,KAAI;IACxB,IAAI,CAACE,IAAI,CAACD,YAAW,GAAIU,CAAC,CAACV,YAAW;IACtC;EACF,CAAC;EACDa,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,OAAM,GAAI;UACdC,OAAO,EAAE,IAAI,CAACpB,IAAI,CAACoB,OAAO;UAC1BjB,KAAK,EAAE,IAAI,CAACE,IAAI,CAACF,KAAK;UACtBC,YAAY,EAAE,IAAI,CAACC,IAAI,CAACD,YAAY;UACpCE,QAAQ,EAAE,IAAI,CAACD,IAAI,CAACC;QACtB;QAEAe,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,OAAO;QACvC,MAAMI,GAAE,GAAI,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UAC5DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEZ,IAAI,CAACa,SAAS,CAACT,OAAO;QAC9B,CAAC;QACDE,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEC,GAAG,CAACM,MAAM,EAAE,sBAAsB,EAAEN,GAAG,CAACG,OAAO,CAACI,GAAG,CAAC,cAAc,CAAC,CAAC;QAEhG,MAAMC,IAAG,GAAI,MAAMR,GAAG,CAACQ,IAAI,CAAC;QAC5B,IAAIR,GAAG,CAACS,EAAC,IAAKD,IAAI,CAACF,MAAK,KAAM,IAAI,EAAE;UAClClB,KAAK,CAAC,2BAA2B;UACjC,MAAMsB,OAAM,GAAI;YAAE,GAAG,IAAI,CAACjC,IAAI;YAAE,GAAG;cAAEG,KAAK,EAAE,IAAI,CAACE,IAAI,CAACF,KAAK;cAAEC,YAAY,EAAE,IAAI,CAACC,IAAI,CAACD;YAAa;UAAE;UACpGK,YAAY,CAACyB,OAAO,CAAC,MAAM,EAAEnB,IAAI,CAACa,SAAS,CAACK,OAAO,CAAC;UACpD,IAAI,CAACrB,OAAO,CAACC,IAAI,CAAC,iBAAiB;QACrC,OAAO;UACLF,KAAK,CAAC,kBAAkBY,GAAG,CAACM,MAAM,MAAME,IAAI,CAACI,OAAO,EAAE;QACxD;MACF,EAAE,OAAOC,CAAC,EAAE;QACVf,OAAO,CAACgB,KAAK,CAACD,CAAC;QACfzB,KAAK,CAAC,yBAAyB;MACjC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}