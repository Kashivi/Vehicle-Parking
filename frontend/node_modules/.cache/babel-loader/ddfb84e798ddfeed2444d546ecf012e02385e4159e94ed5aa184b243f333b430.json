{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      parkingLots: [],\n      currentUserId: 1 // Ensure this is set from your auth logic\n    };\n  },\n  mounted() {\n    this.fetchLots();\n  },\n  methods: {\n    editLot(lotId) {\n      this.$router.push({\n        name: 'EditLot',\n        params: {\n          id: lotId\n        }\n      });\n    },\n    async deleteLot(lotId) {\n      if (!confirm('Are you sure you want to delete this lot?')) return;\n      try {\n        const res = await fetch(`http://localhost:5000/api/parkinglot`, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: lotId\n          })\n        });\n        const json = await res.json();\n        if (json.status === 'ok') {\n          this.parkingLots = this.parkingLots.filter(l => l.id !== lotId);\n        } else {\n          alert(`Delete failed: ${json.message}`);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    async fetchLots() {\n      const res = await fetch(\"http://localhost:5000/api/parkinglot\");\n      if (!res.ok) return console.error(\"Failed to load lots\");\n      const data = await res.json();\n      this.parkingLots = data.lots.map(lot => {\n        const spots = lot.spots || [];\n        const occupiedCount = spots.filter(s => s.status === 'O').length;\n        const availableCount = spots.filter(s => s.status === 'A').length;\n        console.log(this.lot);\n        return {\n          ...lot,\n          occupiedCount,\n          availableCount,\n          spots // keep for button display\n        };\n      });\n    },\n    getSpotStatus(lot, n) {\n      const spot = lot.spots.find(s => parseInt(s.id) === n);\n      return spot ? spot.status : 'A'; // default to 'A' if not found\n    },\n    goToEditSpot(lot, n) {\n      this.$router.push({\n        name: 'editspot',\n        params: {\n          lotId: lot.id,\n          spotNum: n\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","parkingLots","currentUserId","mounted","fetchLots","methods","editLot","lotId","$router","push","name","params","id","deleteLot","confirm","res","fetch","method","headers","body","JSON","stringify","json","status","filter","l","alert","message","e","console","error","ok","lots","map","lot","spots","occupiedCount","s","length","availableCount","log","getSpotStatus","n","spot","find","parseInt","goToEditSpot","spotNum"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\AdminDashboard.vue"],"sourcesContent":["<template>\r\n    <nav>\r\n    <router-link to=\"/admin-dashboard\"> Home </router-link> |\r\n    <router-link to=\"/user-stat\"> Users </router-link> |\r\n    <router-link to=\"/search\"> Search </router-link> |\r\n    <router-link to=\"/admin-summary\"> Summary </router-link> |\r\n    <router-link to=\"/\"> Logout </router-link>\r\n    </nav>\r\n  <router-view/>\r\n\r\n  <div class=\"container mt-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n      <p class=\"mb-3\">\r\n              <strong> Parking Lots </strong>\r\n              <span class=\"text-muted ms-2\"> | <router-link class=\"btn btn-primary\" to=\"/add-lot\">+ Add Lot</router-link> </span>\r\n      </p>\r\n    </div>\r\n    <br>\r\n\r\n    <div class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n      <div v-for=\"lot in parkingLots\" :key=\"lot.id\" class=\"col\">\r\n        <div class=\"card h-100 shadow-sm d-flex flex-column\">\r\n          <div class=\"card-body d-flex flex-column\">\r\n            <p class=\"mb-2\">\r\n              <strong>{{ lot.prime_location_name }}</strong>\r\n              <span class=\"text-muted ms-2\"> | {{ lot.address }}</span>\r\n            </p>\r\n            <!-- Edit/Delete buttons -->\r\n           <div class=\"my-2\">\r\n            <button class=\"edit-link\" @click=\"editLot(lot.id)\">Edit</button>\r\n            <button class=\"delete-link\" @click=\"deleteLot(lot.id)\">Delete</button>\r\n          </div>\r\n            <p><strong>Spots:</strong> {{ lot.occupiedCount }} / {{ lot.number_of_spots }}</p>\r\n            <div class=\"spot-grid mt-auto\"> \r\n                <button \r\n                    v-for=\"n in lot.number_of_spots\"\r\n                    :key=\"`${lot.id}-${n}`\"\r\n                    class=\"spot-btn\"\r\n                    :class=\"getSpotStatus(lot, n) === 'A' ? 'btn btn-success' : 'btn btn-danger'\"\r\n                    @click=\"goToEditSpot(lot, n)\"\r\n                >\r\n                    {{ n }} - {{ getSpotStatus(lot, n) }}\r\n                </button>\r\n           </div>         \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    \r\n    <!-- Modal for Occupied Spot Info -->\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      parkingLots: [],\r\n      currentUserId: 1 // Ensure this is set from your auth logic\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchLots();\r\n  },\r\n  methods: {\r\n\r\n    editLot(lotId) {\r\n          this.$router.push({ name: 'EditLot', params: { id: lotId } });\r\n      },\r\n\r\n    async deleteLot(lotId) {\r\n       if (!confirm('Are you sure you want to delete this lot?')) return;\r\n        try {\r\n        const res = await fetch(`http://localhost:5000/api/parkinglot`, {\r\n        method: 'DELETE',\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({ id: lotId })\r\n      });\r\n      const json = await res.json();\r\n      if (json.status === 'ok') {\r\n        this.parkingLots = this.parkingLots.filter(l => l.id !== lotId);\r\n      } else {\r\n        alert(`Delete failed: ${json.message}`);\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    },\r\n    async fetchLots() {\r\n            const res = await fetch(\"http://localhost:5000/api/parkinglot\");\r\n            if (!res.ok) return console.error(\"Failed to load lots\");\r\n\r\n            const data = await res.json();\r\n            this.parkingLots = data.lots.map(lot => {\r\n                const spots = lot.spots || [];\r\n                const occupiedCount = spots.filter(s => s.status === 'O').length;\r\n                const availableCount = spots.filter(s => s.status === 'A').length;\r\n                console.log(this.lot);\r\n\r\n                return {\r\n                ...lot,\r\n                occupiedCount,\r\n                availableCount,\r\n                spots,  // keep for button display\r\n                };\r\n            });\r\n            },\r\n\r\n    getSpotStatus(lot, n) {\r\n        const spot = lot.spots.find(s => parseInt(s.id) === n);\r\n        return spot ? spot.status : 'A';  // default to 'A' if not found\r\n        },\r\n    \r\n    goToEditSpot(lot,n) {\r\n        this.$router.push({ \r\n          name: 'editspot',\r\n          params: { lotId : lot.id, spotNum : n} \r\n        })\r\n      },\r\n        \r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.spot-grid {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 6px; /* Adjust spacing between buttons */\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n  margin-bottom: 60px;\r\n}\r\n\r\n.spot-btn {\r\n  width: 50px;\r\n  height: 40px;\r\n  font-size: 14px;\r\n  padding: 0;\r\n  color : blue;\r\n  text-align: center;\r\n}\r\n\r\n.modal-backdrop {\r\n  position: fixed;\r\n  inset: 0;\r\n  background: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.modal-content {\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 280px;\r\n}\r\n\r\n.edit-link {\r\n  margin-right: 1rem; /* adds ~16px spacing */\r\n  color: #0d6efd; /* Bootstrap info color */\r\n}\r\n.delete-link {\r\n  color: #dc3545; /* Bootstrap danger color */\r\n}\r\n\r\nnav {\r\n  padding: 30px;\r\n}\r\n\r\nnav a {\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\nnav a.router-link-exact-active {\r\n  color: #42b983;\r\n}\r\n\r\n\r\n</style>"],"mappings":";;;;;AAwDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IAEPC,OAAOA,CAACC,KAAK,EAAE;MACT,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,SAAS;QAAEC,MAAM,EAAE;UAAEC,EAAE,EAAEL;QAAM;MAAE,CAAC,CAAC;IACjE,CAAC;IAEH,MAAMM,SAASA,CAACN,KAAK,EAAE;MACpB,IAAI,CAACO,OAAO,CAAC,2CAA2C,CAAC,EAAE;MAC1D,IAAI;QACJ,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UAChEC,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YAAC,cAAc,EAAC;UAAkB,CAAC;UAC5CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAET,EAAE,EAAEL;UAAM,CAAC;QACpC,CAAC,CAAC;QACF,MAAMe,IAAG,GAAI,MAAMP,GAAG,CAACO,IAAI,CAAC,CAAC;QAC7B,IAAIA,IAAI,CAACC,MAAK,KAAM,IAAI,EAAE;UACxB,IAAI,CAACtB,WAAU,GAAI,IAAI,CAACA,WAAW,CAACuB,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACb,EAAC,KAAML,KAAK,CAAC;QACjE,OAAO;UACLmB,KAAK,CAAC,kBAAkBJ,IAAI,CAACK,OAAO,EAAE,CAAC;QACzC;MACF,EAAE,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;MAClB;IACA,CAAC;IACD,MAAMxB,SAASA,CAAA,EAAG;MACV,MAAMW,GAAE,GAAI,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MAC/D,IAAI,CAACD,GAAG,CAACgB,EAAE,EAAE,OAAOF,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MAExD,MAAM9B,IAAG,GAAI,MAAMe,GAAG,CAACO,IAAI,CAAC,CAAC;MAC7B,IAAI,CAACrB,WAAU,GAAID,IAAI,CAACgC,IAAI,CAACC,GAAG,CAACC,GAAE,IAAK;QACpC,MAAMC,KAAI,GAAID,GAAG,CAACC,KAAI,IAAK,EAAE;QAC7B,MAAMC,aAAY,GAAID,KAAK,CAACX,MAAM,CAACa,CAAA,IAAKA,CAAC,CAACd,MAAK,KAAM,GAAG,CAAC,CAACe,MAAM;QAChE,MAAMC,cAAa,GAAIJ,KAAK,CAACX,MAAM,CAACa,CAAA,IAAKA,CAAC,CAACd,MAAK,KAAM,GAAG,CAAC,CAACe,MAAM;QACjET,OAAO,CAACW,GAAG,CAAC,IAAI,CAACN,GAAG,CAAC;QAErB,OAAO;UACP,GAAGA,GAAG;UACNE,aAAa;UACbG,cAAc;UACdJ,KAAK,CAAG;QACR,CAAC;MACL,CAAC,CAAC;IACF,CAAC;IAETM,aAAaA,CAACP,GAAG,EAAEQ,CAAC,EAAE;MAClB,MAAMC,IAAG,GAAIT,GAAG,CAACC,KAAK,CAACS,IAAI,CAACP,CAAA,IAAKQ,QAAQ,CAACR,CAAC,CAACzB,EAAE,MAAM8B,CAAC,CAAC;MACtD,OAAOC,IAAG,GAAIA,IAAI,CAACpB,MAAK,GAAI,GAAG,EAAG;IAClC,CAAC;IAELuB,YAAYA,CAACZ,GAAG,EAACQ,CAAC,EAAE;MAChB,IAAI,CAAClC,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,UAAU;QAChBC,MAAM,EAAE;UAAEJ,KAAI,EAAI2B,GAAG,CAACtB,EAAE;UAAEmC,OAAM,EAAIL;QAAC;MACvC,CAAC;IACH;EAEJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}