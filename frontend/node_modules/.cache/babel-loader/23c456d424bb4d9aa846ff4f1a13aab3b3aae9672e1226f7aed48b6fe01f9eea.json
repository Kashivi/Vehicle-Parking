{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: 'UserDashboard',\n  data() {\n    return {\n      criterion: 'location',\n      query: '',\n      results: null,\n      username: '',\n      token: localStorage.getItem('auth_token') || '',\n      recentReservations: []\n    };\n  },\n  mounted() {\n    const lotId = this.$route.params.lot_id;\n    const spotId = this.$route.params.spot_id;\n    console.log('Navigated to release:', lotId, spotId);\n    this.token = localStorage.getItem('auth_token') || '';\n    const stored = localStorage.getItem('user');\n    if (stored) {\n      try {\n        this.username = JSON.parse(stored).username || stored;\n      } catch {\n        this.username = stored;\n      }\n    }\n    this.fetchRecentReservations(); // fetch anyway\n\n    // If user just returned from releasing\n    if (this.$route.query.refresh === 'true') {\n      console.log(\"üîÅ Refreshing dashboard after release...\");\n      this.fetchRecentReservations();\n      this.$router.replace({\n        query: {}\n      }); // Clears URL query after reload\n    }\n  },\n  methods: {\n    logout() {\n      localStorage.removeItem('user');\n      this.$router.push({\n        name: 'Login'\n      });\n    },\n    async fetchRecentReservations() {\n      const config = {\n        headers: {\n          'Authorization': this.token\n        }\n      };\n      try {\n        const resp = await axios.get(`http://localhost:5000/api/recent-reservations`, config);\n        console.log('Fetched recent:', resp.data.recent);\n        this.recentReservations = resp.data.recent || [];\n      } catch (err) {\n        console.error('Error loading recent reservations:', err);\n      }\n    },\n    goToReleasePage(lotId, spotId) {\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\n      const userId = user.user_id;\n      this.$router.push({\n        name: 'ReleaseSpot',\n        query: {\n          lot_id: lotId,\n          spot_id: spotId,\n          user_id: userId\n        }\n      });\n    },\n    async doSearch() {\n      const config = {\n        headers: {\n          'Authorization': this.token\n        }\n      };\n      try {\n        const resp = await axios.get(`http://localhost:5000/api/parkinglot`, {\n          params: {\n            query: this.criterion === 'location' ? this.query : undefined,\n            pincode: this.criterion === 'pincode' ? this.query : undefined\n          },\n          ...config\n        });\n        const lots = resp.data.lots || [];\n        this.results = {\n          lots: lots.map(lot => {\n            const spots = Array.isArray(lot.spots) ? lot.spots : [];\n            const occupiedCount = spots.filter(s => s.status === 'O').length;\n            return {\n              id: lot.id,\n              address: lot.address,\n              price: lot.price,\n              totalSpots: lot.number_of_spots,\n              availableSpots: lot.available_spots,\n              spots\n            };\n          })\n        };\n      } catch (err) {\n        if (err.response && err.response.status === 404) {\n          this.results = {\n            lots: []\n          };\n        } else {\n          console.error('Search error:', err);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","criterion","query","results","username","token","localStorage","getItem","recentReservations","mounted","lotId","$route","params","lot_id","spotId","spot_id","console","log","stored","JSON","parse","fetchRecentReservations","refresh","$router","replace","methods","logout","removeItem","push","config","headers","resp","get","recent","err","error","goToReleasePage","user","userId","user_id","doSearch","undefined","pincode","lots","map","lot","spots","Array","isArray","occupiedCount","filter","s","status","length","id","address","price","totalSpots","number_of_spots","availableSpots","available_spots","response"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\UserDashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-dashboard\">\r\n    <nav class=\"navbar mb-4\">\r\n      <router-link to=\"/user-dashboard\">Home</router-link> |\r\n      <router-link to=\"/user-summary\">Summary</router-link> |\r\n      <router-link to=\"/\">Logout</router-link>\r\n      <br>\r\n      \r\n      <router-link to=\"/edituser\">Edit Profile</router-link>\r\n    </nav>\r\n    <router-view/>\r\n    <h2> Welcome {{ username }}</h2> \r\n\r\n<!-- üëá Recent Reservations Section -->\r\n<div v-if=\"recentReservations.length\" class=\"section-card\">\r\n  <h3 class=\"section-title\">üìå Recent Reservations</h3>\r\n  <table class=\"results-table\">\r\n    <thead>\r\n      <tr>\r\n        <th>Lot ID</th>\r\n        <th>Location</th>\r\n        <th>Vehicle Number</th>\r\n        <th>Parking Time</th>\r\n        <th>Action</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"res in recentReservations\" :key=\"res.lot_id + res.parking_timestamp\">\r\n        <td>{{ res.lot_id }}</td>\r\n        <td>{{ res.location }}</td>\r\n        <td>{{ res.vehicle_number }}</td>\r\n        <td>{{ res.parking_timestamp }}</td>\r\n        <td>\r\n           <button\r\n            v-if=\"res.reservation_status === 'Release'\"\r\n            @click=\"goToReleasePage(res.lot_id, res.spot_id)\"\r\n            class=\"btn btn-danger\"\r\n          >Release</button>\r\n          <span v-else>Parked Out</span>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n</div>\r\n<!-- Divider -->\r\n    <hr />\r\n\r\n<!-- üîç Search Section -->\r\n<div class=\"section-card\">\r\n  <h3 class=\"section-title\">üîç Search Parking Lots</h3>\r\n  <p>Use the search bar below to find parking lots by location or pincode.</p>\r\n\r\n  <div class=\"search-container\">\r\n    <div class=\"search-controls\">\r\n      <label for=\"search-criterion\">Search By:</label>\r\n      <select v-model=\"criterion\" class=\"search-select\">\r\n        <option value=\"location\">Location</option>\r\n        <option value=\"pincode\">Pincode</option>\r\n      </select>\r\n\r\n      <input\r\n        v-model=\"query\"\r\n        @keyup.enter=\"doSearch\"\r\n        type=\"text\"\r\n        placeholder=\"Enter location or pincode\"\r\n        class=\"search-input\"\r\n      />\r\n\r\n      <button type=\"button\" @click=\"doSearch\" class=\"search-btn\">üîç</button>\r\n    </div>\r\n\r\n    <div v-if=\"results\">\r\n      <table class=\"results-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Address</th>\r\n            <th>Price</th>\r\n            <th>Available</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"lot in results.lots\" :key=\"lot.id\">\r\n            <td>{{ lot.id }}</td>\r\n            <td>{{ lot.address }}</td>\r\n            <td>‚Çπ{{ lot.price }}</td>\r\n            <td>{{ lot.availableSpots }}/{{ lot.totalSpots }}</td>\r\n            <td>\r\n              <router-link :to=\"{ path: '/book-spot', query: { lot_id: lot.id } }\">\r\n                <button class=\"btn btn-primary\">Book</button>\r\n              </router-link>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div v-if=\"!results.lots.length\" class=\"no-results\">No lots found.</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserDashboard',\r\n  data() {\r\n    return {\r\n      criterion: 'location',\r\n      query: '',\r\n      results: null,\r\n      username: '',\r\n      token: localStorage.getItem('auth_token') || '',\r\n      recentReservations: []\r\n    };\r\n  },\r\n  mounted() {\r\n  const lotId = this.$route.params.lot_id;\r\n  const spotId = this.$route.params.spot_id;\r\n  console.log('Navigated to release:', lotId, spotId);\r\n  this.token = localStorage.getItem('auth_token') || ''\r\n  const stored = localStorage.getItem('user');\r\n  if (stored) {\r\n    try {\r\n      this.username = JSON.parse(stored).username || stored;\r\n    } catch {\r\n      this.username = stored;\r\n    }\r\n    }\r\n    this.fetchRecentReservations(); // fetch anyway\r\n\r\n  // If user just returned from releasing\r\n  if (this.$route.query.refresh === 'true') {\r\n    console.log(\"üîÅ Refreshing dashboard after release...\");\r\n    this.fetchRecentReservations();\r\n    this.$router.replace({ query: {} });  // Clears URL query after reload\r\n\r\n  }\r\n},\r\n  methods: {\r\n    logout() {\r\n      localStorage.removeItem('user');\r\n      this.$router.push({ name: 'Login' });\r\n      },\r\n\r\n    async fetchRecentReservations() {\r\n      const config = { headers: { 'Authorization': this.token } };\r\n      try {\r\n        const resp = await axios.get(`http://localhost:5000/api/recent-reservations`, config);\r\n        console.log('Fetched recent:', resp.data.recent); \r\n        this.recentReservations = resp.data.recent || [];\r\n        \r\n      } \r\n      catch (err) {\r\n        console.error('Error loading recent reservations:', err);\r\n      }\r\n    },\r\n\r\n   goToReleasePage(lotId, spotId) {\r\n      const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n      const userId = user.user_id;\r\n\r\n    this.$router.push({\r\n      name: 'ReleaseSpot',\r\n        query: {\r\n        lot_id: lotId,\r\n        spot_id: spotId,\r\n        user_id: userId\r\n      }\r\n    });\r\n  },\r\n\r\n    async doSearch() {\r\n    const config = { headers: { 'Authorization': this.token } };\r\n\r\n    try {\r\n        const resp = await axios.get(`http://localhost:5000/api/parkinglot`, {\r\n        params: {\r\n        query: this.criterion === 'location' ? this.query : undefined,\r\n        pincode: this.criterion === 'pincode' ? this.query : undefined\r\n      },\r\n      ...config\r\n        });\r\n        const lots = resp.data.lots || [];\r\n        this.results = {\r\n        lots: lots.map(lot => {\r\n            const spots = Array.isArray(lot.spots) ? lot.spots : [];\r\n            const occupiedCount = spots.filter(s => s.status === 'O').length;\r\n        return {\r\n          id: lot.id,\r\n          address: lot.address,\r\n          price: lot.price,\r\n          totalSpots: lot.number_of_spots,\r\n          availableSpots: lot.available_spots,\r\n          spots\r\n        };\r\n      })\r\n    };\r\n  } catch (err) {\r\n    if (err.response && err.response.status === 404) {\r\n      this.results = { lots: [] };\r\n    } else {\r\n      console.error('Search error:', err);\r\n    }\r\n  }\r\n},\r\n\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.section-card {\r\n  background-color: #f8f9fa;\r\n  border: 1px solid #ddd;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin: 2rem auto;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.06);\r\n  max-width: 1000px;\r\n}\r\n\r\n.section-title {\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1rem;\r\n  color: #333;\r\n  font-weight: 600;\r\n}\r\n.search-container {\r\n  max-width: 800px;\r\n  margin: 1rem auto;\r\n}\r\n.search-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n.search-select, .search-input, .search-btn {\r\n  padding: 8px 12px;\r\n  font-size: 14px;\r\n}\r\n.search-input {\r\n  flex: 1;\r\n}\r\n.search-btn {\r\n  background-color: #1976d2;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n.search-btn:hover {\r\n  background-color: #1565c0;\r\n}\r\n.results-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 12px;\r\n  font-size: 15px;\r\n}\r\n\r\n.results-table th {\r\n  background-color: #f0f4f8;\r\n  color: #333;\r\n  text-align: left;\r\n}\r\n\r\n.results-table th, .results-table td {\r\n  padding: 10px;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.results-table td {\r\n  background-color: #fafafa;\r\n}\r\n.btn-book {\r\n  background: #28a745;\r\n  color: white;\r\n  border: none;\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n}\r\n.no-results {\r\n  margin-top: 16px;\r\n  color: #555;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}