{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'BookSpot',\n  data() {\n    return {\n      lot_id: null,\n      spot_id: null,\n      user_id: null,\n      vehicle_number: ''\n    };\n  },\n  async created() {\n    // Fetch user info from localStorage\n    const tokenData = JSON.parse(localStorage.getItem('user') || '{}');\n    this.user_id = tokenData.user_id;\n    this.lot_id = this.$route.query.lot_id;\n    try {\n      const token = localStorage.getItem('auth_token'); // consistent token key\n      const response = await fetch(`http://localhost:5000/api/available-spot?lot_id=${this.lot_id}`, {\n        headers: {\n          'Authorization': `${token}`\n        }\n      });\n\n      // Try parsing JSON (check if response is valid)\n      const data = await response.json();\n      if (response.ok && data.spot_number) {\n        this.spot_id = data.spot_number;\n      } else {\n        alert('⚠️ No available spot found in the selected lot.');\n        this.$router.push('/user-dashboard');\n      }\n    } catch (err) {\n      console.error('Error fetching spot:', err);\n      alert('⚠️ Error contacting server. Please login again or try later.');\n      this.$router.push('/user-dashboard');\n    }\n  },\n  methods: {\n    async submitBooking() {\n      try {\n        const token = localStorage.getItem('auth_token'); // use consistent token key\n        const response = await fetch('http://localhost:5000/api/book-spot', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `${token}` // fix: add Bearer\n          },\n          body: JSON.stringify({\n            lot_id: this.lot_id,\n            spot_id: this.spot_id,\n            user_id: this.user_id,\n            vehicle_number: this.vehicle_number\n          })\n        });\n        const result = await response.json();\n        if (response.ok) {\n          alert('✅ Spot booked successfully!');\n          this.$router.push('/user-dashboard');\n        } else {\n          alert('❌ Booking failed: ' + (result.message || 'Unknown error'));\n        }\n      } catch (error) {\n        console.error('Booking error:', error);\n        alert('⚠️ Server error. Please try again later.');\n      }\n    },\n    cancel() {\n      this.$router.push('/user-dashboard');\n    }\n  }\n};","map":{"version":3,"names":["name","data","lot_id","spot_id","user_id","vehicle_number","created","tokenData","JSON","parse","localStorage","getItem","$route","query","token","response","fetch","headers","json","ok","spot_number","alert","$router","push","err","console","error","methods","submitBooking","method","body","stringify","result","message","cancel"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\BookSpot.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h2 class=\"mb-3\">Book Your Parking Spot</h2>\r\n\r\n    <form @submit.prevent=\"submitBooking\" class=\"card p-4\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"lotId\" class=\"form-label\">Lot ID</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"lotId\" :value=\"lot_id\" disabled>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <div class=\"mb-3\">\r\n        <label for=\"spotId\" class=\"form-label\">Spot ID</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"spotId\" :value=\"spot_id\" disabled>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <div class=\"mb-3\">\r\n        <label for=\"userId\" class=\"form-label\">User ID</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"userId\" :value=\"user_id\" disabled>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <div class=\"mb-3\">\r\n        <label for=\"vehicleNumber\" class=\"form-label\">Vehicle Number</label>\r\n        <input v-model=\"vehicle_number\" type=\"text\" class=\"form-control\" id=\"vehicleNumber\" required>\r\n      </div>\r\n      <br>\r\n      <br>\r\n      <div class=\"d-flex justify-content-between\">\r\n        <button type=\"submit\" class=\"btn btn-success\">Reserve </button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" @click=\"cancel\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'BookSpot',\r\n  data() {\r\n    return {\r\n      lot_id: null,\r\n      spot_id: null,\r\n      user_id: null,\r\n      vehicle_number: '',\r\n    };\r\n  },\r\n  async created() {\r\n    // Fetch user info from localStorage\r\n    const tokenData = JSON.parse(localStorage.getItem('user') || '{}');\r\n    this.user_id = tokenData.user_id;\r\n\r\n    this.lot_id = this.$route.query.lot_id;\r\n\r\n    try {\r\n      const token = localStorage.getItem('auth_token');  // consistent token key\r\n      const response = await fetch(`http://localhost:5000/api/available-spot?lot_id=${this.lot_id}`, {\r\n        headers: {\r\n          'Authorization': `${token}`\r\n        }\r\n      });\r\n\r\n      // Try parsing JSON (check if response is valid)\r\n      const data = await response.json();\r\n\r\n      if (response.ok && data.spot_number) {\r\n        this.spot_id = data.spot_number;  \r\n      } else {\r\n        alert('⚠️ No available spot found in the selected lot.');\r\n        this.$router.push('/user-dashboard');\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Error fetching spot:', err);\r\n      alert('⚠️ Error contacting server. Please login again or try later.');\r\n      this.$router.push('/user-dashboard');\r\n    }\r\n  },\r\n  methods: {\r\n\r\n    async submitBooking() {\r\n      try {\r\n        const token = localStorage.getItem('auth_token');  // use consistent token key\r\n        const response = await fetch('http://localhost:5000/api/book-spot', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `${token}`  // fix: add Bearer\r\n          },\r\n          body: JSON.stringify({\r\n            lot_id: this.lot_id,\r\n            spot_id: this.spot_id,\r\n            user_id: this.user_id,\r\n            vehicle_number: this.vehicle_number\r\n          })\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (response.ok) {\r\n          alert('✅ Spot booked successfully!');\r\n          this.$router.push('/user-dashboard');\r\n        } else {\r\n          alert('❌ Booking failed: ' + (result.message || 'Unknown error'));\r\n        }\r\n      } catch (error) {\r\n        console.error('Booking error:', error);\r\n        alert('⚠️ Server error. Please try again later.');\r\n      }\r\n    },\r\n    cancel() {\r\n      this.$router.push('/user-dashboard');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  max-width: 500px;\r\n}\r\n</style>"],"mappings":";AAsCA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA,MAAMC,SAAQ,GAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC;IAClE,IAAI,CAACP,OAAM,GAAIG,SAAS,CAACH,OAAO;IAEhC,IAAI,CAACF,MAAK,GAAI,IAAI,CAACU,MAAM,CAACC,KAAK,CAACX,MAAM;IAEtC,IAAI;MACF,MAAMY,KAAI,GAAIJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAG;MACnD,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAAC,mDAAmD,IAAI,CAACd,MAAM,EAAE,EAAE;QAC7Fe,OAAO,EAAE;UACP,eAAe,EAAE,GAAGH,KAAK;QAC3B;MACF,CAAC,CAAC;;MAEF;MACA,MAAMb,IAAG,GAAI,MAAMc,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIH,QAAQ,CAACI,EAAC,IAAKlB,IAAI,CAACmB,WAAW,EAAE;QACnC,IAAI,CAACjB,OAAM,GAAIF,IAAI,CAACmB,WAAW;MACjC,OAAO;QACLC,KAAK,CAAC,iDAAiD,CAAC;QACxD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;MACtC;IAEF,EAAE,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC1CH,KAAK,CAAC,8DAA8D,CAAC;MACrE,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;IACtC;EACF,CAAC;EACDI,OAAO,EAAE;IAEP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMd,KAAI,GAAIJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,EAAG;QACnD,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEa,MAAM,EAAE,MAAM;UACdZ,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,GAAGH,KAAK,EAAC,CAAG;UAC/B,CAAC;UACDgB,IAAI,EAAEtB,IAAI,CAACuB,SAAS,CAAC;YACnB7B,MAAM,EAAE,IAAI,CAACA,MAAM;YACnBC,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBC,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBC,cAAc,EAAE,IAAI,CAACA;UACvB,CAAC;QACH,CAAC,CAAC;QAEF,MAAM2B,MAAK,GAAI,MAAMjB,QAAQ,CAACG,IAAI,CAAC,CAAC;QAEpC,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACfE,KAAK,CAAC,6BAA6B,CAAC;UACpC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;QACtC,OAAO;UACLF,KAAK,CAAC,oBAAmB,IAAKW,MAAM,CAACC,OAAM,IAAK,eAAe,CAAC,CAAC;QACnE;MACF,EAAE,OAAOP,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtCL,KAAK,CAAC,0CAA0C,CAAC;MACnD;IACF,CAAC;IACDa,MAAMA,CAAA,EAAG;MACP,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}