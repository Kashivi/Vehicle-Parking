{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      lot: {\n        prime_location_name: \"\",\n        address: \"\",\n        pin_code: \"\",\n        price: \"\",\n        number_of_spots: \"\"\n      }\n    };\n  },\n  methods: {\n    async addLot() {\n      try {\n        const response = await fetch('http://localhost:5000/api/parkinglot', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.lot)\n        });\n        if (response.ok) {\n          alert(\"Parking lot added successfully!\");\n          this.$router.push(\"/admin-dashboard\");\n        } else {\n          const err = await response.json();\n          alert(\"Error: \" + err.message);\n        }\n      } catch (err) {\n        console.error(err);\n        alert(\"Server Error\");\n      }\n    },\n    goBack() {\n      this.$router.go(-1); // or use `this.$router.push('/admin/dashboard')`\n    }\n  }\n};","map":{"version":3,"names":["data","lot","prime_location_name","address","pin_code","price","number_of_spots","methods","addLot","response","fetch","method","headers","body","JSON","stringify","ok","alert","$router","push","err","json","message","console","error","goBack","go"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\AddparkingLot.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h2 class=\"text-center mb-3\">New Parking Lot</h2>\r\n    <form @submit.prevent=\"addLot\">\r\n      <div class=\"form-group\">\r\n        <label>Prime Location Name:</label> \r\n        <input v-model=\"lot.prime_location_name\" class=\"form-control\" required />\r\n      </div> <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Address:</label>\r\n        <textarea v-model=\"lot.address\" class=\"form-control\" rows=\"3\" required></textarea>\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Pin Code:</label>\r\n        <input v-model=\"lot.pin_code\" class=\"form-control\" required />\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Price (per hour):</label>\r\n        <input type=\"number\" v-model=\"lot.price\" class=\"form-control\" required />\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"form-group mt-2\">\r\n        <label>Maximum Spots:</label>\r\n        <input type=\"number\" v-model=\"lot.number_of_spots\" class=\"form-control\" required />\r\n      </div>  <br> <br>\r\n\r\n      <div class=\"mt-4 text-center\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">Add</button>\r\n        <button class=\"btn btn-secondary ms-3\" @click=\"goBack\">Cancel</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      lot: {\r\n        prime_location_name: \"\",\r\n        address: \"\",\r\n        pin_code: \"\",\r\n        price: \"\",\r\n        number_of_spots: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async addLot() {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/parkinglot', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(this.lot)\r\n        });\r\n\r\n        if (response.ok) {\r\n          alert(\"Parking lot added successfully!\");\r\n          this.$router.push(\"/admin-dashboard\");\r\n        } else {\r\n          const err = await response.json();\r\n          alert(\"Error: \" + err.message);\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        alert(\"Server Error\");\r\n      }\r\n    },\r\n    goBack() {\r\n      this.$router.go(-1);  // or use `this.$router.push('/admin/dashboard')`\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Optional custom styles */\r\n</style>"],"mappings":";AAsCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE;QACHC,mBAAmB,EAAE,EAAE;QACvBC,OAAO,EAAE,EAAE;QACXC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,eAAe,EAAE;MACnB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACd,GAAG;QAC/B,CAAC,CAAC;QAEF,IAAIQ,QAAQ,CAACO,EAAE,EAAE;UACfC,KAAK,CAAC,iCAAiC,CAAC;UACxC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;QACvC,OAAO;UACL,MAAMC,GAAE,GAAI,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;UACjCJ,KAAK,CAAC,SAAQ,GAAIG,GAAG,CAACE,OAAO,CAAC;QAChC;MACF,EAAE,OAAOF,GAAG,EAAE;QACZG,OAAO,CAACC,KAAK,CAACJ,GAAG,CAAC;QAClBH,KAAK,CAAC,cAAc,CAAC;MACvB;IACF,CAAC;IACDQ,MAAMA,CAAA,EAAG;MACP,IAAI,CAACP,OAAO,CAACQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAG;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}