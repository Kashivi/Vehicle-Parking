{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('/login', {\n          email: this.email,\n          password: this.password\n        });\n        if (response.data.status === 'ok') {\n          // Store token and role\n          localStorage.setItem('auth_token', response.data.auth_token);\n          localStorage.setItem('user_role', response.data.role);\n          localStorage.setItem('user_id', response.data.user_id);\n\n          // Redirect based on role\n          if (response.data.role === 'admin') {\n            this.$router.push({\n              name: 'adminDashboard'\n            });\n          } else {\n            this.$router.push({\n              name: 'userDashboard'\n            });\n          }\n        }\n      } catch (error) {\n        // Show detailed error message\n        if (error.response) {\n          this.errorMessage = error.response.data.message || 'Login failed';\n        } else {\n          this.errorMessage = 'Network error. Please try again.';\n        }\n        console.error('Login error:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","errorMessage","methods","login","response","post","status","localStorage","setItem","auth_token","role","user_id","$router","push","name","error","message","console"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn-login\">Login</button>\r\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post('/login', {\r\n          email: this.email,\r\n          password: this.password\r\n        });\r\n        \r\n        if (response.data.status === 'ok') {\r\n          // Store token and role\r\n          localStorage.setItem('auth_token', response.data.auth_token);\r\n          localStorage.setItem('user_role', response.data.role);\r\n          localStorage.setItem('user_id', response.data.user_id);\r\n          \r\n          // Redirect based on role\r\n          if (response.data.role === 'admin') {\r\n            this.$router.push({ name: 'adminDashboard' });\r\n          } else {\r\n            this.$router.push({ name: 'userDashboard' });\r\n          }\r\n        }\r\n      } catch (error) {\r\n        // Show detailed error message\r\n        if (error.response) {\r\n          this.errorMessage = error.response.data.message || 'Login failed';\r\n        } else {\r\n          this.errorMessage = 'Network error. Please try again.';\r\n        }\r\n        console.error('Login error:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.btn-login {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 1rem;\r\n}\r\n</style>"],"mappings":";AAmBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,QAAQ,EAAE;UAC1CN,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,IAAII,QAAQ,CAACN,IAAI,CAACQ,MAAK,KAAM,IAAI,EAAE;UACjC;UACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEJ,QAAQ,CAACN,IAAI,CAACW,UAAU,CAAC;UAC5DF,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEJ,QAAQ,CAACN,IAAI,CAACY,IAAI,CAAC;UACrDH,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEJ,QAAQ,CAACN,IAAI,CAACa,OAAO,CAAC;;UAEtD;UACA,IAAIP,QAAQ,CAACN,IAAI,CAACY,IAAG,KAAM,OAAO,EAAE;YAClC,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAiB,CAAC,CAAC;UAC/C,OAAO;YACL,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAgB,CAAC,CAAC;UAC9C;QACF;MACF,EAAE,OAAOC,KAAK,EAAE;QACd;QACA,IAAIA,KAAK,CAACX,QAAQ,EAAE;UAClB,IAAI,CAACH,YAAW,GAAIc,KAAK,CAACX,QAAQ,CAACN,IAAI,CAACkB,OAAM,IAAK,cAAc;QACnE,OAAO;UACL,IAAI,CAACf,YAAW,GAAI,kCAAkC;QACxD;QACAgB,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}