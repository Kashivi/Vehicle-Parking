{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    login() {\n      axios.post('http://localhost:5000/login', {\n        email: this.email,\n        password: this.password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        const data = res.data;\n        const role = data.role ? data.role.toLowerCase() : null;\n        localStorage.setItem('auth_token', data.auth_token);\n        localStorage.setItem('user', JSON.stringify({\n          email: data.email,\n          username: data.username,\n          role: role,\n          user_id: data.user_id\n        }));\n        if (role === 'admin') {\n          this.$router.push('/admin-dashboard');\n        } else if (role === 'user') {\n          this.$router.push('/user-dashboard');\n        } else {\n          this.errorMessage = 'Invalid user role';\n        }\n      }).catch(err => {\n        this.errorMessage = err.response?.data?.message || 'Network error. Try again.';\n        console.error(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","errorMessage","methods","login","post","headers","then","res","role","toLowerCase","localStorage","setItem","auth_token","JSON","stringify","username","user_id","$router","push","catch","err","response","message","console","error"],"sources":["C:\\Users\\DELL\\OneDrive\\Desktop\\vehicle_parking_app_23f3004276\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <h1>Login Page</h1>\r\n\r\n    <form @submit.prevent=\"login\">\r\n      <label for=\"email\">Email:</label>\r\n      <input type=\"text\" v-model=\"email\" placeholder=\"Enter Email\" required />\r\n      <br /><br />\r\n\r\n      <label for=\"password\">Password:</label>\r\n      <input type=\"password\" v-model=\"password\" placeholder=\"Enter Password\" required />\r\n      <br /><br />\r\n\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n\r\n    <p v-if=\"errorMessage\" style=\"color:red;\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      axios.post('http://localhost:5000/login', {\r\n        email: this.email,\r\n        password: this.password\r\n      }, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      })\r\n      .then(res => {\r\n        const data = res.data\r\n        const role = data.role ? data.role.toLowerCase() : null\r\n\r\n        localStorage.setItem('auth_token', data.auth_token)\r\n        localStorage.setItem('user', JSON.stringify({\r\n          email: data.email,\r\n          username: data.username,\r\n          role: role,\r\n          user_id: data.user_id\r\n        }))\r\n\r\n        if (role === 'admin') {\r\n          this.$router.push('/admin-dashboard')\r\n        } else if (role === 'user') {\r\n          this.$router.push('/user-dashboard')\r\n        } else {\r\n          this.errorMessage = 'Invalid user role'\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.errorMessage = err.response?.data?.message || 'Network error. Try again.'\r\n        console.error(err)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 2rem auto;\r\n  padding: 2rem;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 0.5rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.btn-login {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 1rem;\r\n}\r\n</style>"],"mappings":";AAqBA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACNP,KAAK,CAACQ,IAAI,CAAC,6BAA6B,EAAE;QACxCL,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,EAAE;QACDK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAChD,CAAC,EACAC,IAAI,CAACC,GAAE,IAAK;QACX,MAAMT,IAAG,GAAIS,GAAG,CAACT,IAAG;QACpB,MAAMU,IAAG,GAAIV,IAAI,CAACU,IAAG,GAAIV,IAAI,CAACU,IAAI,CAACC,WAAW,CAAC,IAAI,IAAG;QAEtDC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEb,IAAI,CAACc,UAAU;QAClDF,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAAC;UAC1Cf,KAAK,EAAED,IAAI,CAACC,KAAK;UACjBgB,QAAQ,EAAEjB,IAAI,CAACiB,QAAQ;UACvBP,IAAI,EAAEA,IAAI;UACVQ,OAAO,EAAElB,IAAI,CAACkB;QAChB,CAAC,CAAC;QAEF,IAAIR,IAAG,KAAM,OAAO,EAAE;UACpB,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,kBAAkB;QACtC,OAAO,IAAIV,IAAG,KAAM,MAAM,EAAE;UAC1B,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,iBAAiB;QACrC,OAAO;UACL,IAAI,CAACjB,YAAW,GAAI,mBAAkB;QACxC;MACF,CAAC,EACAkB,KAAK,CAACC,GAAE,IAAK;QACZ,IAAI,CAACnB,YAAW,GAAImB,GAAG,CAACC,QAAQ,EAAEvB,IAAI,EAAEwB,OAAM,IAAK,2BAA0B;QAC7EC,OAAO,CAACC,KAAK,CAACJ,GAAG;MACnB,CAAC;IACH;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}